
#####################################################################################
# Workflow for processing FLEXPART/FLEXDUST model output, for doing analysis        # 
# with regards to the "Tracing the winds" project and master thesis with working    #
# title "Aeolian dust sources, transport and deposition over the Chinese            #
# Loess Plateau during 1999-2019: A study using the FLEXDUST and FLEXPART models    # 
# by Ove Haugvaldstad et al"                                                        #
# Include rules processing and downloading ERA5 data                                # 
#                                                                                   # 
# Created by Ove Haugvaldstad, ovewh@student.geo.uio.no                             #
#                                                                                   # 
#####################################################################################

# Load config file

configfile: "config/config.yaml"

#----------------------------------CONSTANTS----------------------------------------#

import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import xarray as xr



wildcard_constraints:
    season='DJF|MAM',
    fig_file_extention='png|pdf',
    location='|'.join(config['receptors'].keys())+'|BAODE',
    region='|'.join(config['source_regions'].keys())+'|total',
    comp_type='std_anom|anom|std|comp_only',
    threshold='05-std|1-std|2-std'

include: "rules/process_ERA5_rules/download.smk"
include: "rules/process_ERA5_rules/calc_nao.smk"
include: "rules/process_ERA5_rules/utils.smk"
include: "rules/process_ERA5_rules/calculate_means.smk"
include: "rules/process_ERA5_rules/climatology_calculation.smk"
include: "rules/process_ERA5_rules/calculate_anomalies.smk"
include: "rules/process_ERA5_rules/download_land_surface_data.smk"
include: "rules/process_ERA5_rules/calc_EAWMI.smk"
include: "rules/process_ERA5_rules/calc_AO.smk"
include: "rules/process_ERA5_rules/calc_APV_indecies.smk"
include: "rules/precipitation_at_receptor.smk"
include: 'rules/process_models_data_rules/process_emission_field.smk'
include: 'rules/process_models_data_rules/process_source_contribution.smk'
include: 'rules/process_models_data_rules/calc_total_deposition.smk'
include: 'rules/create_composite.smk'
include: 'rules/create_composite_MERRA2.smk'
include: 'rules/process_ERA5_rules/calc_temperature_gradient.smk'
include: 'rules/create_timeseries_table.smk'
include: 'rules/download_orography.smk'
include: 'rules/process_models_data_rules/trajectory_clustering.smk'
include: 'rules/process_ERA5_rules/download_data_coab_detection.smk'
include: 'plotting_notebooks.smk'
include: 'rules/get_dust_loading_trajectories.smk'
include: 'plot_agu_figures.smk'

SDATE=config['sdate']
EDATE=config['edate']
MODEL_SDATE=config['m_sdate']
MODEL_EDATE=config['m_edate']
SEASONS=['DJF','MAM']
rule all:
    input:
        'results/timeseries_table.csv',
        config['flexdust_results']+'/emission_flux.time_series.taklamakan.MAM.1999-2019.nc',
        expand('results/composites/windspeed_geopot_500hPa/era5.wind_geopot.500hPa.composite.{kind}.{psize}.{season}.{location}.{region}.4_rank.1999-2019.nc', 
               kind=['total_deposition'], psize=['2micron','20micron'], 
               location=['SACOL','LINGTAI','BADOE','SHAPOTOU','YINCHUAN', 'LANTIAN','LUOCHUAN'],
              region=['total'], season=['DJF','MAM']),
        expand('results/composites/msl_pressure_wind_850hPa/era5.wind_msl.850hPa.composite.{kind}.{psize}.{season}.{location}.{region}.4_rank.1999-2019.nc', 
               kind=['total_deposition'], psize=['2micron','20micron'], 
               location=['SACOL','LINGTAI','BADOE','SHAPOTOU','YINCHUAN', 'LANTIAN','LUOCHUAN'],std=['05-std','1-std'],
              region=['total'], season=['DJF','MAM']),
        expand('results/composites/windspeed_geopot_200hPa/era5.wind_geopot.200hPa.composite.{kind}.{psize}.{season}.{location}.{region}.4_rank.1999-2019.nc', 
               kind=['total_deposition'], psize=['2micron','20micron'], 
               location=['SACOL','LINGTAI','BADOE','SHAPOTOU','YINCHUAN', 'LANTIAN','LUOCHUAN'],
              region=['total'], season=['DJF','MAM'])

rule calculate_correlations_receptor:
    input:
        expand('results/correlations_receptor/{kind}/{kind}.{location}.{psize}.correlations.{season}.csv',
                location=['SACOL','LINGTAI','BADOE','SHAPOTOU','YINCHUAN', 'LANTIAN', 'LUOCHUAN'],
                season=['MAM','DJF'], psize=['2micron','20micron'],kind=['total_deposition'])


rule make_deposition:
    input:
        expand('results/model_results/time_series/{kind}/{kind}.{location}.{region}.{size}.MAM.{sdate}-{edate}.nc',
            location=['SACOL','LINGTAI','BADOE','SHAPOTOU','YINCHUAN', 'LANTIAN','LUOCHUAN'], 
              size=['2micron','20micron'], sdate=MODEL_SDATE,edate=MODEL_EDATE,kind=['drydep', 'wetdep','total_deposition'],
              region=['total', 'mongolia','taklamakan','north_west'])



rule make_deposition_drydep:
    input:
        expand('results/model_results/time_series/{kind}/{kind}.{location}.{region}.{size}.MAM.{sdate}-{edate}.nc',
            location=['SACOL','LINGTAI','BADOE','SHAPOTOU','YINCHUAN', 'LANTIAN','LUOCHUAN'], 
              size=['2micron','20micron'], sdate=MODEL_SDATE,edate=MODEL_EDATE,kind=['drydep'],
              region=['total'])



rule make_deposition_wetdep:
    input:
        expand('results/model_results/time_series/{kind}/{kind}.{location}.{region}.{size}.MAM.{sdate}-{edate}.nc',
            location=['SACOL','LINGTAI','BADOE','SHAPOTOU','YINCHUAN', 'LANTIAN','LUOCHUAN'], 
              size=['2micron','20micron'], sdate=MODEL_SDATE,edate=MODEL_EDATE,kind=['wetdep'],
              region=['total'])
